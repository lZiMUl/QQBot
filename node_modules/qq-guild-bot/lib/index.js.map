{"version":3,"file":"index.js","sources":["../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../src/openapi/openapi.ts","../src/openapi/v1/resource.ts","../src/openapi/v1/pins-message.ts","../src/openapi/v1/reaction.ts","../src/openapi/v1/guild.ts","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/loglevel/lib/loglevel.js","../src/utils/logger.ts","../src/utils/utils.ts","../src/openapi/v1/channel.ts","../src/openapi/v1/me.ts","../src/openapi/v1/message.ts","../src/openapi/v1/member.ts","../src/openapi/v1/role.ts","../src/openapi/v1/direct-message.ts","../src/openapi/v1/channel-permissions.ts","../src/openapi/v1/audio.ts","../src/openapi/v1/mute.ts","../src/openapi/v1/announce.ts","../src/openapi/v1/schedule.ts","../src/openapi/v1/guild-permissions.ts","../src/openapi/v1/interaction.ts","../src/openapi/v1/openapi.ts","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../src/types/websocket-types.ts","../src/utils/constants.ts","../src/client/websocket/websocket.ts","../src/client/session/session.ts","../src/client/client.ts","../src/bot.ts"],"sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import { OpenAPI } from './v1/openapi';\n\nexport const versionMapping = Object.create(null);\n\nexport function register(version: string, api: typeof OpenAPI) {\n  versionMapping[version] = api;\n}\n","const apiMap = {\n  guildURI: '/guilds/:guildID',\n  guildMembersURI: '/guilds/:guildID/members',\n  guildMemberURI: '/guilds/:guildID/members/:userID',\n  channelsURI: '/guilds/:guildID/channels',\n  channelURI: '/channels/:channelID',\n  guildAnnouncesURI: '/guilds/:guildID/announces',\n  guildAnnounceURI: '/guilds/:guildID/announces/:messageID',\n  channelAnnouncesURI: '/channels/:channelID/announces',\n  channelAnnounceURI: '/channels/:channelID/announces/:messageID',\n  messagesURI: '/channels/:channelID/messages',\n  messageURI: '/channels/:channelID/messages/:messageID',\n  userMeURI: '/users/@me',\n  userMeGuildsURI: '/users/@me/guilds',\n  muteURI: '/guilds/:guildID/mute',\n  muteMemberURI: '/guilds/:guildID/members/:userID/mute',\n  muteMembersURI: '/guilds/:guildID/mute',\n  gatewayURI: '/gateway',\n  gatewayBotURI: '/gateway/bot',\n  audioControlURI: '/channels/:channelID/audio',\n  rolesURI: '/guilds/:guildID/roles',\n  roleURI: '/guilds/:guildID/roles/:roleID',\n  memberRoleURI: '/guilds/:guildID/members/:userID/roles/:roleID',\n  userMeDMURI: '/users/@me/dms',\n  dmsURI: '/dms/:guildID/messages',\n  channelPermissionsURI: '/channels/:channelID/members/:userID/permissions',\n  channelRolePermissionsURI: '/channels/:channelID/roles/:roleID/permissions',\n  schedulesURI: '/channels/:channelID/schedules',\n  scheduleURI: '/channels/:channelID/schedules/:scheduleID',\n  guildPermissionURI: '/guilds/:guildID/api_permission',\n  guildPermissionDemandURI: '/guilds/:guildID/api_permission/demand',\n  wsInfo: '/gateway/bot',\n  reactionURI: '/channels/:channelID/messages/:messageID/reactions/:emojiType/:emojiID',\n  pinsMessageIdURI: '/channels/:channelID/pins/:messageID',\n  pinsMessageURI: '/channels/:channelID/pins',\n  interactionURI: '/interactions/:interactionID',\n  guildVoiceMembersURI: '/channels/:channelID/voice/members', // 语音子频道在线成员车查询\n  botMic: '/channels/:channelID/mic', // 机器人上麦|下麦\n};\nexport const getURL = (endpoint: keyof typeof apiMap) => apiMap[endpoint];\n","import { Config, IPinsMessage, OpenAPIRequest, PinsMessageAPI } from '@src/types';\nimport { RestyResponse } from 'resty-client';\nimport { getURL } from './resource';\n\nexport default class PinsMessage implements PinsMessageAPI {\n  public request: OpenAPIRequest;\n  public config: Config;\n  constructor(request: OpenAPIRequest, config: Config) {\n    this.request = request;\n    this.config = config;\n  }\n\n  // 获取精华消息\n  public pinsMessage(channelID: string): Promise<RestyResponse<IPinsMessage>> {\n    const options = {\n      method: 'GET' as const,\n      url: getURL('pinsMessageURI'),\n      rest: {\n        channelID,\n      },\n    };\n    return this.request<IPinsMessage>(options);\n  }\n\n  // 发送精华消息\n  public putPinsMessage(channelID: string, messageID: string): Promise<RestyResponse<IPinsMessage>> {\n    const options = {\n      method: 'PUT' as const,\n      url: getURL('pinsMessageIdURI'),\n      headers: {\n        'Content-Type': 'application/json;',\n      },\n      rest: {\n        channelID,\n        messageID,\n      },\n    };\n    return this.request<IPinsMessage>(options);\n  }\n\n  // 删除精华消息\n  public deletePinsMessage(channelID: string, messageID: string): Promise<RestyResponse<any>> {\n    const options = {\n      method: 'DELETE' as const,\n      url: getURL('pinsMessageIdURI'),\n      rest: {\n        channelID,\n        messageID,\n      },\n    };\n    return this.request(options);\n  }\n}\n","import { Config, OpenAPIRequest, ReactionAPI, ReactionObj, ReactionUserListObj } from '@src/types';\nimport { RestyResponse } from 'resty-client';\nimport { getURL } from './resource';\n\nexport default class Reaction implements ReactionAPI {\n  public request: OpenAPIRequest;\n  public config: Config;\n  constructor(request: OpenAPIRequest, config: Config) {\n    this.request = request;\n    this.config = config;\n  }\n\n  // 发表表情表态\n  public postReaction(channelId: string, reactionToCreate: ReactionObj): Promise<RestyResponse<any>> {\n    const options = {\n      method: 'PUT' as const,\n      url: getURL('reactionURI'),\n      rest: {\n        channelID: channelId,\n        messageID: reactionToCreate?.message_id,\n        emojiType: reactionToCreate?.emoji_type,\n        emojiID: reactionToCreate?.emoji_id,\n      },\n    };\n    return this.request(options);\n  }\n\n  // 删除表情表态\n  public deleteReaction(channelId: string, reactionToDelete: ReactionObj): Promise<RestyResponse<any>> {\n    const options = {\n      method: 'DELETE' as const,\n      url: getURL('reactionURI'),\n      rest: {\n        channelID: channelId,\n        messageID: reactionToDelete?.message_id,\n        emojiType: reactionToDelete?.emoji_type,\n        emojiID: reactionToDelete?.emoji_id,\n      },\n    };\n    return this.request(options);\n  }\n\n  // 拉取表情表态用户列表\n  public getReactionUserList(\n    channelId: string,\n    reactionToCreate: ReactionObj,\n    options: ReactionUserListObj,\n  ): Promise<RestyResponse<any>> {\n    if (!options) {\n      return Promise.reject(new Error(\"'options' required!\"));\n    }\n\n    const reqOptions = {\n      method: 'GET' as const,\n      url: getURL('reactionURI'),\n      rest: {\n        channelID: channelId,\n        messageID: reactionToCreate?.message_id,\n        emojiType: reactionToCreate?.emoji_type,\n        emojiID: reactionToCreate?.emoji_id,\n      },\n      params: options,\n    };\n    return this.request(reqOptions);\n  }\n}\n","import { Config, OpenAPIRequest, GuildAPI, GuildMembersPager, IGuild, IMember, IVoiceMember } from '@src/types';\nimport { RestyResponse } from 'resty-client';\nimport { getURL } from './resource';\n\nexport default class Guild implements GuildAPI {\n  public request: OpenAPIRequest;\n  public config: Config;\n  constructor(request: OpenAPIRequest, config: Config) {\n    this.request = request;\n    this.config = config;\n  }\n  // 获取频道信息\n  public guild(guildID: string): Promise<RestyResponse<IGuild>> {\n    const options = {\n      method: 'GET' as const,\n      url: getURL('guildURI'),\n      rest: {\n        guildID,\n      },\n    };\n    return this.request<IGuild>(options);\n  }\n  // 获取某个成员信息\n  public guildMember(guildID: string, userID: string): Promise<RestyResponse<IMember>> {\n    const options = {\n      method: 'GET' as const,\n      url: getURL('guildMemberURI'),\n      rest: {\n        guildID,\n        userID,\n      },\n    };\n    return this.request<IMember>(options);\n  }\n  // 获取频道成员列表\n  public guildMembers(guildID: string, pager?: GuildMembersPager): Promise<RestyResponse<IMember[]>> {\n    pager = pager || { after: '0', limit: 1 };\n    const options = {\n      method: 'GET' as const,\n      url: getURL('guildMembersURI'),\n      rest: {\n        guildID,\n      },\n      params: pager,\n    };\n    return this.request<IMember[]>(options);\n  }\n  // 删除指定频道成员\n  public deleteGuildMember(guildID: string, userID: string): Promise<RestyResponse<any>> {\n    const options = {\n      method: 'DELETE' as const,\n      url: getURL('guildMemberURI'),\n      rest: {\n        guildID,\n        userID,\n      },\n    };\n    return this.request(options);\n  }\n  // 语音子频道在线成员列表\n  public guildVoiceMembers(channelID: string): Promise<RestyResponse<IVoiceMember[]>> {\n    const options = {\n      method: 'GET' as const,\n      url: getURL('guildVoiceMembersURI'),\n      rest: {\n        channelID,\n      },\n    };\n    return this.request<IVoiceMember[]>(options);\n  }\n}\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n    var isIE = (typeof window !== undefinedType) && (typeof window.navigator !== undefinedType) && (\n        /Trident\\/|MSIE /.test(window.navigator.userAgent)\n    );\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Trace() doesn't print the message in IE, so for that case we need to wrap it\n    function traceForIE() {\n        if (console.log) {\n            if (console.log.apply) {\n                console.log.apply(console, arguments);\n            } else {\n                // In old IE, native console methods themselves don't have apply().\n                Function.prototype.apply.apply(console.log, [console, arguments]);\n            }\n        }\n        if (console.trace) console.trace();\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (methodName === 'trace' && isIE) {\n            return traceForIE;\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n      defaultLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n\n      var storageKey = \"loglevel\";\n      if (typeof name === \"string\") {\n        storageKey += \":\" + name;\n      } else if (typeof name === \"symbol\") {\n        storageKey = undefined;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      function clearPersistedLevel() {\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage.removeItem(storageKey);\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC\";\n          } catch (ignore) {}\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          defaultLevel = level;\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.resetLevel = function () {\n          self.setLevel(defaultLevel, false);\n          clearPersistedLevel();\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if ((typeof name !== \"symbol\" && typeof name !== \"string\") || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    // ES6 default export, for compatibility\n    defaultLogger['default'] = defaultLogger;\n\n    return defaultLogger;\n}));\n","import log from 'loglevel';\nlog.setLevel('info');\nlog.setLevel('trace');\n\nexport const BotLogger = log;\n","import { AxiosRequestHeaders } from 'axios';\nimport { version } from '../../package.json';\nimport { BotLogger } from '@src/utils/logger';\n\n// 延迟\nexport const delayTime = (ms: number) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n};\n\n// 随机延迟\nexport const randomDelay = (min: number, max: number) => {\n  let ms = Math.random() * (max - min) + min;\n  ms = Math.ceil(ms);\n  BotLogger.info(`delay for ${ms} ms ...`);\n  return delayTime(ms);\n};\n\n// 转为字符串\nexport const resolveString = (data: any) => {\n  if (typeof data === 'string') return data;\n  if (Array.isArray(data)) return data.join('\\n');\n  return String(data);\n};\n\n// 转为对象\nexport const toObject = (data: any) => {\n  if (Buffer.isBuffer(data)) return JSON.parse(data.toString());\n  if (typeof data === 'object') return data;\n  if (typeof data === 'string') return JSON.parse(data);\n  // return String(data);\n};\n\nexport const has = (o: any, k: any) => Object.prototype.hasOwnProperty.call(o, k);\n\n// 获取number类型的10位时间戳\nexport const getTimeStampNumber = () => Number(new Date().getTime().toString().substr(0, 10));\n\n// 添加 User-Agent\nexport const addUserAgent = (header: AxiosRequestHeaders) => {\n  const sdkVersion = version;\n  header['User-Agent'] = `BotNodeSDK/v${sdkVersion}`;\n};\n// 添加 User-Agent\nexport const addAuthorization = (header: AxiosRequestHeaders, appID: string, token: string) => {\n  header['Authorization'] = `Bot ${appID}.${token}`;\n};\n// 组装完整Url\nexport const buildUrl = (path = '', isSandbox?: boolean) => {\n  return `${isSandbox ? 'https://sandbox.api.sgroup.qq.com' : 'https://api.sgroup.qq.com'}${path}`;\n};\n","import { Config, OpenAPIRequest, ChannelAPI, PostChannelObj, IChannel, PatchChannelObj } from '@src/types';\nimport { getTimeStampNumber } from '@src/utils/utils';\nimport { RestyResponse } from 'resty-client';\nimport { getURL } from './resource';\n\nexport default class Channel implements ChannelAPI {\n  public request: OpenAPIRequest;\n  public config: Config;\n  constructor(request: OpenAPIRequest, config: Config) {\n    this.request = request;\n    this.config = config;\n  }\n  // 获取子频道信息\n  public channel(channelID: string): Promise<RestyResponse<IChannel>> {\n    const options = {\n      method: 'GET' as const,\n      url: getURL('channelURI'),\n      rest: {\n        channelID,\n      },\n    };\n    return this.request<IChannel>(options);\n  }\n\n  // 获取频道下的子频道列表\n  public channels(guildID: string): Promise<RestyResponse<IChannel[]>> {\n    const options = {\n      method: 'GET' as const,\n      url: getURL('channelsURI'),\n      rest: {\n        guildID,\n      },\n    };\n    return this.request<IChannel[]>(options);\n  }\n\n  // 创建子频道\n  public postChannel(guildID: string, channel: PostChannelObj): Promise<RestyResponse<IChannel>> {\n    if (channel.position === 0) {\n      channel.position = getTimeStampNumber();\n    }\n    const options = {\n      method: 'POST' as const,\n      url: getURL('channelsURI'),\n      rest: {\n        guildID,\n      },\n      data: channel,\n    };\n    return this.request<IChannel>(options);\n  }\n\n  // 修改子频道信息\n  public patchChannel(channelID: string, channel: PatchChannelObj): Promise<RestyResponse<IChannel>> {\n    if (channel.position === 0) {\n      channel.position = getTimeStampNumber();\n    }\n    const options = {\n      method: 'PATCH' as const,\n      url: getURL('channelURI'),\n      rest: {\n        channelID,\n      },\n      data: channel,\n    };\n    return this.request<IChannel>(options);\n  }\n  // 删除指定子频道\n  public deleteChannel(channelID: string): Promise<RestyResponse<any>> {\n    const options = {\n      method: 'DELETE' as const,\n      url: getURL('channelURI'),\n      rest: {\n        channelID,\n      },\n    };\n    return this.request(options);\n  }\n}\n","import { Config, OpenAPIRequest, IUser, MeAPI, IGuild, MeGuildsReq } from '@src/types';\nimport { RestyResponse } from 'resty-client';\nimport { getURL } from './resource';\n\nexport default class Me implements MeAPI {\n  public request: OpenAPIRequest;\n  public config: Config;\n  constructor(request: OpenAPIRequest, config: Config) {\n    this.request = request;\n    this.config = config;\n  }\n\n  // 获取当前用户信息\n  public me(): Promise<RestyResponse<IUser>> {\n    const options = {\n      method: 'GET' as const,\n      url: getURL('userMeURI'),\n    };\n    return this.request<IUser>(options);\n  }\n\n  // 获取当前用户频道列表\n  public meGuilds(options?: MeGuildsReq): Promise<RestyResponse<IGuild[]>> {\n    const reqOptions = {\n      method: 'GET' as const,\n      url: getURL('userMeGuildsURI'),\n      params: options,\n    };\n    return this.request<IGuild[]>(reqOptions);\n  }\n}\n","import { Config, OpenAPIRequest, IMessage, IMessageRes, MessageAPI, MessagesPager, MessageToCreate } from '@src/types';\nimport { RestyResponse } from 'resty-client';\nimport { getURL } from './resource';\n\nexport default class Message implements MessageAPI {\n  public request: OpenAPIRequest;\n  public config: Config;\n  constructor(request: OpenAPIRequest, config: Config) {\n    this.request = request;\n    this.config = config;\n  }\n  // 获取指定消息\n  public message(channelID: string, messageID: string): Promise<RestyResponse<IMessageRes>> {\n    const options = {\n      method: 'GET' as const,\n      url: getURL('messageURI'),\n      rest: {\n        channelID,\n        messageID,\n      },\n    };\n    return this.request<IMessageRes>(options);\n  }\n  // 获取消息列表\n  public messages(channelID: string, pager?: MessagesPager): Promise<RestyResponse<IMessage[]>> {\n    const params = Object.create(null);\n    if (pager && pager.type && pager.id) {\n      params[pager.type] = pager.id;\n      params.limit = pager.limit || 20;\n    }\n\n    const options = {\n      method: 'GET' as const,\n      url: getURL('messagesURI'),\n      rest: {\n        channelID,\n      },\n      params,\n    };\n    return this.request<IMessage[]>(options);\n  }\n\n  // 发送消息\n  public postMessage(channelID: string, message: MessageToCreate): Promise<RestyResponse<IMessage>> {\n    const options = {\n      method: 'POST' as const,\n      url: getURL('messagesURI'),\n      rest: {\n        channelID,\n      },\n      data: message,\n    };\n    return this.request<IMessage>(options);\n  }\n\n  // 撤回消息\n  public deleteMessage(channelID: string, messageID: string, hideTip?: boolean): Promise<RestyResponse<any>> {\n    const params = Object.create(null);\n    if (hideTip) {\n      params.hidetip = hideTip;\n    }\n    const options = {\n      method: 'DELETE' as const,\n      url: getURL('messageURI'),\n      rest: {\n        channelID,\n        messageID,\n      },\n      params,\n    };\n    return this.request(options);\n  }\n}\n","import { Config, OpenAPIRequest, MemberAddRoleBody, MemberAPI } from '@src/types';\nimport { RestyResponse } from 'resty-client';\nimport { getURL } from './resource';\n\nexport default class Member implements MemberAPI {\n  public request: OpenAPIRequest;\n  public config: Config;\n  constructor(request: OpenAPIRequest, config: Config) {\n    this.request = request;\n    this.config = config;\n  }\n  // 增加频道身份组成员\n  public memberAddRole(\n    guildID: string,\n    roleID: string,\n    userID: string,\n    channel?: string | MemberAddRoleBody, // 兼容原来传递 channel 对象的逻辑，后续仅支持 string\n  ): Promise<RestyResponse<any>> {\n    const channelObj =\n      typeof channel === 'string'\n        ? {\n            channel: {\n              id: channel,\n            },\n          }\n        : channel;\n\n    const options = {\n      method: 'PUT' as const,\n      url: getURL('memberRoleURI'),\n      rest: {\n        guildID,\n        userID,\n        roleID,\n      },\n      data: channelObj,\n    };\n    return this.request(options);\n  }\n  // 删除频道身份组成员\n  public memberDeleteRole(\n    guildID: string,\n    roleID: string,\n    userID: string,\n    channel?: string | MemberAddRoleBody, // 兼容原来传递 channel 对象的逻辑，后续仅支持 string\n  ): Promise<RestyResponse<any>> {\n    const channelObj =\n      typeof channel === 'string'\n        ? {\n            channel: {\n              id: channel,\n            },\n          }\n        : channel;\n\n    const options = {\n      method: 'DELETE' as const,\n      url: getURL('memberRoleURI'),\n      rest: {\n        guildID,\n        userID,\n        roleID,\n      },\n      data: channelObj,\n    };\n    return this.request(options);\n  }\n}\n","import { Config, OpenAPIRequest, GuildRoles, IRole, IRoleFilter, RoleAPI, UpdateRoleRes } from '@src/types';\nimport { RestyResponse } from 'resty-client';\nimport { getURL } from './resource';\n\n// 默认的filter：0 1 代表是否设置 0-否 1-是\nexport const defaultFilter: IRoleFilter = {\n  name: 1,\n  color: 1,\n  hoist: 1,\n};\n\n// 用户组默认颜色值\nexport const defaultColor = 4278245297;\nexport default class Role implements RoleAPI {\n  public request: OpenAPIRequest;\n  public config: Config;\n  constructor(request: OpenAPIRequest, config: Config) {\n    this.request = request;\n    this.config = config;\n  }\n  // 获取频道身份组列表\n  public roles(guildID: string): Promise<RestyResponse<GuildRoles>> {\n    const options = {\n      method: 'GET' as const,\n      url: getURL('rolesURI'),\n      rest: {\n        guildID,\n      },\n    };\n    return this.request<GuildRoles>(options);\n  }\n\n  // 创建频道身份组\n  public postRole(\n    guildID: string,\n    role: Omit<IRole, 'id'>,\n    filter = defaultFilter,\n  ): Promise<RestyResponse<UpdateRoleRes>> {\n    if (role.color === 0) {\n      role.color = defaultColor;\n    }\n    const options = {\n      method: 'POST' as const,\n      url: getURL('rolesURI'),\n      rest: {\n        guildID,\n      },\n      data: {\n        guild_id: guildID,\n        filter,\n        info: role,\n      },\n    };\n    return this.request<UpdateRoleRes>(options);\n  }\n\n  // 修改频道身份组\n  public patchRole(\n    guildID: string,\n    roleID: string,\n    role: IRole,\n    filter = defaultFilter,\n  ): Promise<RestyResponse<UpdateRoleRes>> {\n    if (role.color === 0) {\n      role.color = defaultColor;\n    }\n\n    const options = {\n      method: 'PATCH' as const,\n      url: getURL('roleURI'),\n      rest: {\n        guildID,\n        roleID,\n      },\n      data: {\n        guild_id: guildID,\n        filter,\n        info: role,\n      },\n    };\n    return this.request<UpdateRoleRes>(options);\n  }\n\n  // 删除频道身份组\n  public deleteRole(guildID: string, roleID: string): Promise<RestyResponse<any>> {\n    const options = {\n      method: 'DELETE' as const,\n      url: getURL('roleURI'),\n      rest: {\n        guildID,\n        roleID,\n      },\n    };\n    return this.request(options);\n  }\n}\n","import {\n  OpenAPIRequest,\n  Config,\n  DirectMessageAPI,\n  DirectMessageToCreate,\n  IDirectMessage,\n  IMessage,\n  MessageToCreate,\n} from '@src/types';\nimport { RestyResponse } from 'resty-client';\nimport { getURL } from './resource';\n\nexport default class DirectMessage implements DirectMessageAPI {\n  public request: OpenAPIRequest;\n  public config: Config;\n  constructor(request: OpenAPIRequest, config: Config) {\n    this.request = request;\n    this.config = config;\n  }\n  // 创建私信频道\n  public createDirectMessage(dm: DirectMessageToCreate): Promise<RestyResponse<IDirectMessage>> {\n    const options = {\n      method: 'POST' as const,\n      url: getURL('userMeDMURI'),\n      data: dm,\n    };\n    return this.request<IDirectMessage>(options);\n  }\n\n  // 在私信频道内发消息\n  public postDirectMessage(guildID: string, msg: MessageToCreate): Promise<RestyResponse<IMessage>> {\n    const options = {\n      method: 'POST' as const,\n      url: getURL('dmsURI'),\n      rest: {\n        guildID,\n      },\n      data: msg,\n    };\n    return this.request<IMessage>(options);\n  }\n}\n","import {\n  OpenAPIRequest,\n  Config,\n  ChannelPermissionsAPI,\n  IChannelPermissions,\n  IChannelRolePermissions,\n  UpdateChannelPermissions,\n} from '@src/types';\nimport { RestyResponse } from 'resty-client';\nimport { getURL } from './resource';\nexport default class ChannelPermissions implements ChannelPermissionsAPI {\n  public request: OpenAPIRequest;\n  public config: Config;\n  constructor(request: OpenAPIRequest, config: Config) {\n    this.request = request;\n    this.config = config;\n  }\n\n  // 获取指定子频道的权限\n  public channelPermissions(channelID: string, userID: string): Promise<RestyResponse<IChannelPermissions>> {\n    const options = {\n      method: 'GET' as const,\n      url: getURL('channelPermissionsURI'),\n      rest: {\n        channelID,\n        userID,\n      },\n    };\n    return this.request<IChannelPermissions>(options);\n  }\n\n  // 修改指定子频道的权限\n  public putChannelPermissions(\n    channelID: string,\n    userID: string,\n    p: UpdateChannelPermissions,\n  ): Promise<RestyResponse<any>> {\n    try {\n      // 校验参数\n      parseInt(p.add, 10);\n      parseInt(p.remove, 10);\n    } catch (error) {\n      return Promise.reject(new Error('invalid parameter'));\n    }\n    const options = {\n      method: 'PUT' as const,\n      url: getURL('channelPermissionsURI'),\n      rest: {\n        channelID,\n        userID,\n      },\n      data: p,\n    };\n    return this.request<IChannelPermissions>(options);\n  }\n\n  // 获取指定子频道身份组的权限\n  public channelRolePermissions(channelID: string, roleID: string): Promise<RestyResponse<IChannelRolePermissions>> {\n    const options = {\n      method: 'GET' as const,\n      url: getURL('channelRolePermissionsURI'),\n      rest: {\n        channelID,\n        roleID,\n      },\n    };\n    return this.request<IChannelRolePermissions>(options);\n  }\n\n  // 修改指定子频道身份组的权限\n  public putChannelRolePermissions(\n    channelID: string,\n    roleID: string,\n    p: UpdateChannelPermissions,\n  ): Promise<RestyResponse<any>> {\n    try {\n      // 校验参数\n      parseInt(p.add, 10);\n      parseInt(p.remove, 10);\n    } catch (error) {\n      return Promise.reject(new Error('invalid parameter'));\n    }\n    const options = {\n      method: 'PUT' as const,\n      url: getURL('channelRolePermissionsURI'),\n      rest: {\n        channelID,\n        roleID,\n      },\n      data: p,\n    };\n    return this.request<IChannelRolePermissions>(options);\n  }\n}\n","import { AudioAPI, AudioControl, Config, OpenAPIRequest } from '@src/types';\nimport { RestyResponse } from 'resty-client';\nimport { getURL } from './resource';\n\nexport default class Audio implements AudioAPI {\n  public request: OpenAPIRequest;\n  public config: Config;\n  constructor(request: OpenAPIRequest, config: Config) {\n    this.request = request;\n    this.config = config;\n  }\n  // 执行音频播放，暂停等操作\n  postAudio(channelID: string, audioControl: AudioControl): Promise<RestyResponse<AudioControl>> {\n    const options = {\n      method: 'POST' as const,\n      url: getURL('audioControlURI'),\n      rest: {\n        channelID,\n      },\n      data: audioControl,\n    };\n    return this.request<AudioControl>(options);\n  }\n  // 机器人上麦\n  botOnMic(channelID: string): Promise<RestyResponse<{}>> {\n    const options = {\n      method: 'PUT' as const,\n      url: getURL('botMic'),\n      rest: {\n        channelID,\n      },\n      data: {},\n    };\n    return this.request<{}>(options);\n  }\n  // 机器人下麦\n  botOffMic(channelID: string): Promise<RestyResponse<{}>> {\n    const options = {\n      method: 'DELETE' as const,\n      url: getURL('botMic'),\n      rest: {\n        channelID,\n      },\n      data: {},\n    };\n    return this.request<{}>(options);\n  }\n}\n","import { Config, OpenAPIRequest, MuteAPI, MuteOptions } from '@src/types';\nimport { RestyResponse } from 'resty-client';\nimport { getURL } from './resource';\n\nexport default class Mute implements MuteAPI {\n  public request: OpenAPIRequest;\n  public config: Config;\n  constructor(request: OpenAPIRequest, config: Config) {\n    this.request = request;\n    this.config = config;\n  }\n\n  // 禁言某个member\n  public muteMember(guildID: string, userID: string, options: MuteOptions): Promise<RestyResponse<any>> {\n    if (!options) {\n      return Promise.reject(new Error(\"'options' required!\"));\n    }\n\n    const reqOptions = {\n      method: 'PATCH' as const,\n      url: getURL('muteMemberURI'),\n      rest: {\n        guildID,\n        userID,\n      },\n      data: {\n        mute_end_timestamp: options?.timeTo,\n        mute_seconds: options?.seconds,\n      },\n    };\n    return this.request(reqOptions);\n  }\n\n  // 禁言所有人\n  public muteAll(guildID: string, options: MuteOptions): Promise<RestyResponse<any>> {\n    if (!options) {\n      return Promise.reject(new Error(\"'options' required!\"));\n    }\n\n    const reqOptions = {\n      method: 'PATCH' as const,\n      url: getURL('muteURI'),\n      rest: {\n        guildID,\n      },\n      data: {\n        mute_end_timestamp: options?.timeTo,\n        mute_seconds: options?.seconds,\n      },\n    };\n    return this.request(reqOptions);\n  }\n\n  // 禁言批量member\n  public muteMembers(guildID: string, userIDList: Array<string>, options: MuteOptions): Promise<RestyResponse<any>> {\n    if (!options) {\n      return Promise.reject(new Error(\"'options' required!\"));\n    }\n\n    const reqOptions = {\n      method: 'PATCH' as const,\n      url: getURL('muteMembersURI'),\n      rest: {\n        guildID,\n      },\n      data: {\n        mute_end_timestamp: options?.timeTo,\n        mute_seconds: options?.seconds,\n        user_ids: userIDList,\n      },\n    };\n    return this.request(reqOptions);\n  }\n}\n","import { Config, OpenAPIRequest, AnnounceAPI, IAnnounce, RecommendObj } from '@src/types';\nimport { RestyResponse } from 'resty-client';\nimport { getURL } from './resource';\n\nexport default class Announce implements AnnounceAPI {\n  public request: OpenAPIRequest;\n  public config: Config;\n  constructor(request: OpenAPIRequest, config: Config) {\n    this.request = request;\n    this.config = config;\n  }\n\n  // 创建guild公告\n  public postGuildAnnounce(guildID: string, channelID: string, messageID: string): Promise<RestyResponse<IAnnounce>> {\n    const options = {\n      method: 'POST' as const,\n      url: getURL('guildAnnouncesURI'),\n      rest: {\n        guildID,\n      },\n      data: {\n        channel_id: channelID,\n        message_id: messageID,\n      },\n    };\n    return this.request<IAnnounce>(options);\n  }\n\n  // 删除guild公告\n  public deleteGuildAnnounce(guildID: string, messageID: string): Promise<RestyResponse<any>> {\n    const options = {\n      method: 'DELETE' as const,\n      url: getURL('guildAnnounceURI'),\n      rest: {\n        guildID,\n        messageID,\n      },\n    };\n    return this.request(options);\n  }\n\n  // 创建频道公告推荐子频道\n  public postGuildRecommend(guildID: string, recommendObj: RecommendObj): Promise<RestyResponse<IAnnounce>> {\n    const options = {\n      method: 'POST' as const,\n      url: getURL('guildAnnouncesURI'),\n      rest: {\n        guildID,\n      },\n      data: recommendObj,\n    };\n    return this.request<IAnnounce>(options);\n  }\n\n  // 创建channel公告\n  public postChannelAnnounce(channelID: string, messageID: string): Promise<RestyResponse<IAnnounce>> {\n    const options = {\n      method: 'POST' as const,\n      url: getURL('channelAnnouncesURI'),\n      rest: {\n        channelID,\n      },\n      data: {\n        message_id: messageID,\n      },\n    };\n    return this.request<IAnnounce>(options);\n  }\n\n  // 删除channel公告\n  public deleteChannelAnnounce(channelID: string, messageID: string): Promise<RestyResponse<any>> {\n    const options = {\n      method: 'DELETE' as const,\n      url: getURL('channelAnnounceURI'),\n      rest: {\n        channelID,\n        messageID,\n      },\n    };\n    return this.request(options);\n  }\n}\n","import { Config, ISchedule, OpenAPIRequest, ScheduleAPI, ScheduleToCreate, ScheduleToPatch } from '@src/types';\nimport { RestyResponse } from 'resty-client';\nimport { getURL } from './resource';\n\nexport default class Schedule implements ScheduleAPI {\n  public request: OpenAPIRequest;\n  public config: Config;\n  constructor(request: OpenAPIRequest, config: Config) {\n    this.request = request;\n    this.config = config;\n  }\n\n  // 获取日程列表\n  public schedules(channelID: string, since?: string): Promise<RestyResponse<ISchedule[]>> {\n    if (since && since.length !== 13) {\n      return Promise.reject(new Error(\"Param 'since' is invalid, millisecond timestamp expected！\"));\n    }\n    const options = {\n      method: 'GET' as const,\n      url: getURL('schedulesURI'),\n      rest: {\n        channelID,\n      },\n      params: {\n        since,\n      },\n    };\n    return this.request<ISchedule[]>(options);\n  }\n\n  // 获取日程\n  public schedule(channelID: string, scheduleID: string): Promise<RestyResponse<ISchedule>> {\n    const options = {\n      method: 'GET' as const,\n      url: getURL('scheduleURI'),\n      rest: {\n        channelID,\n        scheduleID,\n      },\n    };\n    return this.request<ISchedule>(options);\n  }\n\n  // 创建日程\n  public postSchedule(channelID: string, schedule: ScheduleToCreate): Promise<RestyResponse<ISchedule>> {\n    const options = {\n      method: 'POST' as const,\n      url: getURL('schedulesURI'),\n      rest: {\n        channelID,\n      },\n      data: {\n        schedule,\n      },\n    };\n    return this.request<ISchedule>(options);\n  }\n\n  // 修改日程\n  public patchSchedule(\n    channelID: string,\n    scheduleID: string,\n    schedule: ScheduleToPatch,\n  ): Promise<RestyResponse<ISchedule>> {\n    const options = {\n      method: 'PATCH' as const,\n      url: getURL('scheduleURI'),\n      rest: {\n        channelID,\n        scheduleID,\n      },\n      data: {\n        schedule,\n      },\n    };\n    return this.request<ISchedule>(options);\n  }\n\n  // 删除日程\n  public deleteSchedule(channelID: string, scheduleID: string): Promise<RestyResponse<any>> {\n    const options = {\n      method: 'DELETE' as const,\n      url: getURL('scheduleURI'),\n      rest: {\n        channelID,\n        scheduleID,\n      },\n    };\n    return this.request<any>(options);\n  }\n}\n","import {\n  GuildPermissionRes,\n  GuildPermissionDemand,\n  GuildPermissionsAPI,\n  Config,\n  OpenAPIRequest,\n  PermissionDemandToCreate,\n} from '@src/types';\nimport { RestyResponse } from 'resty-client';\nimport { getURL } from './resource';\n\nexport default class GuildPermissions implements GuildPermissionsAPI {\n  public request: OpenAPIRequest;\n  public config: Config;\n  constructor(request: OpenAPIRequest, config: Config) {\n    this.request = request;\n    this.config = config;\n  }\n\n  // 获取频道可用权限列表\n  public permissions(guildID: string): Promise<RestyResponse<GuildPermissionRes>> {\n    const options = {\n      method: 'GET' as const,\n      url: getURL('guildPermissionURI'),\n      rest: {\n        guildID,\n      },\n    };\n    return this.request<GuildPermissionRes>(options);\n  }\n\n  // 创建频道 API 接口权限授权链接\n  public postPermissionDemand(\n    guildID: string,\n    permissionDemandObj: PermissionDemandToCreate,\n  ): Promise<RestyResponse<GuildPermissionDemand>> {\n    const options = {\n      method: 'POST' as const,\n      url: getURL('guildPermissionDemandURI'),\n      rest: {\n        guildID,\n      },\n      data: permissionDemandObj,\n    };\n    return this.request<GuildPermissionDemand>(options);\n  }\n}\n","import { Config, OpenAPIRequest, InteractionAPI, InteractionData } from '@src/types';\nimport { RestyResponse } from 'resty-client';\nimport { getURL } from './resource';\n\nexport default class Interaction implements InteractionAPI {\n  public request: OpenAPIRequest;\n  public config: Config;\n  constructor(request: OpenAPIRequest, config: Config) {\n    this.request = request;\n    this.config = config;\n  }\n\n  // 异步更新交互数据\n  public putInteraction(interactionID: string, interactionData: InteractionData): Promise<RestyResponse<any>> {\n    const options = {\n      method: 'PUT' as const,\n      url: getURL('interactionURI'),\n      headers: {\n        'Content-Type': 'none',\n      },\n      rest: {\n        interactionID,\n      },\n      data: interactionData,\n    };\n    return this.request(options);\n  }\n}\n","/* eslint-disable prefer-promise-reject-errors */\nimport { register } from '@src/openapi/openapi';\nimport resty, { RequestOptions, RestyResponse } from 'resty-client';\nimport PinsMessage from './pins-message';\nimport Reaction from './reaction';\nimport Guild from './guild';\nimport Channel from './channel';\nimport Me from './me';\nimport Message from './message';\nimport Member from './member';\nimport Role from './role';\nimport DirectMessage from './direct-message';\nimport ChannelPermissions from './channel-permissions';\nimport Audio from './audio';\nimport Mute from './mute';\nimport Announce from './announce';\nimport Schedule from './schedule';\nimport GuildPermissions from './guild-permissions';\nimport Interaction from './interaction';\nimport { addUserAgent, addAuthorization, buildUrl } from '@src/utils/utils';\nimport {\n  GuildAPI,\n  ChannelAPI,\n  MeAPI,\n  MessageAPI,\n  Config,\n  IOpenAPI,\n  MemberAPI,\n  RoleAPI,\n  DirectMessageAPI,\n  ChannelPermissionsAPI,\n  AudioAPI,\n  MuteAPI,\n  ScheduleAPI,\n  AnnounceAPI,\n  GuildPermissionsAPI,\n  ReactionAPI,\n  PinsMessageAPI,\n  InteractionAPI,\n} from '@src/types';\nexport const apiVersion = 'v1';\nexport class OpenAPI implements IOpenAPI {\n  static newClient(config: Config) {\n    return new OpenAPI(config);\n  }\n\n  config: Config = {\n    appID: '',\n    token: '',\n  };\n  public guildApi!: GuildAPI;\n  public channelApi!: ChannelAPI;\n  public meApi!: MeAPI;\n  public messageApi!: MessageAPI;\n  public memberApi!: MemberAPI;\n  public roleApi!: RoleAPI;\n  public muteApi!: MuteAPI;\n  public announceApi!: AnnounceAPI;\n  public scheduleApi!: ScheduleAPI;\n  public directMessageApi!: DirectMessageAPI;\n  public channelPermissionsApi!: ChannelPermissionsAPI;\n  public audioApi!: AudioAPI;\n  public reactionApi!: ReactionAPI;\n  public interactionApi!: InteractionAPI;\n  public pinsMessageApi!: PinsMessageAPI;\n  public guildPermissionsApi!: GuildPermissionsAPI;\n\n  constructor(config: Config) {\n    this.config = config;\n    this.register(this);\n  }\n\n  public register(client: IOpenAPI) {\n    // 注册聚合client\n    client.guildApi = new Guild(this.request, this.config);\n    client.channelApi = new Channel(this.request, this.config);\n    client.meApi = new Me(this.request, this.config);\n    client.messageApi = new Message(this.request, this.config);\n    client.memberApi = new Member(this.request, this.config);\n    client.roleApi = new Role(this.request, this.config);\n    client.muteApi = new Mute(this.request, this.config);\n    client.announceApi = new Announce(this.request, this.config);\n    client.scheduleApi = new Schedule(this.request, this.config);\n    client.directMessageApi = new DirectMessage(this.request, this.config);\n    client.channelPermissionsApi = new ChannelPermissions(this.request, this.config);\n    client.audioApi = new Audio(this.request, this.config);\n    client.guildPermissionsApi = new GuildPermissions(this.request, this.config);\n    client.reactionApi = new Reaction(this.request, this.config);\n    client.interactionApi = new Interaction(this.request, this.config);\n    client.pinsMessageApi = new PinsMessage(this.request, this.config);\n  }\n  // 基础rest请求\n  public request<T extends Record<any, any> = any>(options: RequestOptions): Promise<RestyResponse<T>> {\n    const { appID, token } = this.config;\n\n    options.headers = { ...options.headers };\n\n    // 添加 UA\n    addUserAgent(options.headers);\n    // 添加鉴权信息\n    addAuthorization(options.headers, appID, token);\n    // 组装完整Url\n    const botUrl = buildUrl(options.url, this.config.sandbox);\n\n    // 简化错误信息，后续可考虑通过中间件形式暴露给用户自行处理\n    resty.useRes(\n      (result) => result,\n      (error) => {\n        let traceid = error?.response?.headers?.['x-tps-trace-id'];\n        if (error?.response?.data) {\n          return Promise.reject({\n            ...error.response.data,\n            traceid,\n          });\n        }\n        if (error?.response) {\n          return Promise.reject({\n            ...error.response,\n            traceid,\n          });\n        }\n        return Promise.reject(error);\n      },\n    );\n\n    const client = resty.create(options);\n    return client.request<T>(botUrl!, options);\n  }\n}\n\nexport function v1Setup() {\n  register(apiVersion, OpenAPI);\n}\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import { apiVersion } from '@src/openapi/v1/openapi';\nimport { getURL } from '@src/openapi/v1/resource';\nimport { buildUrl } from '@src/utils/utils';\n\n// websocket建立成功回包\nexport interface wsResData {\n  op: number; // opcode ws的类型\n  d?: {\n    // 事件内容\n    heartbeat_interval?: number; // 心跳时间间隔\n  };\n  s: number; // 心跳的唯一标识\n  t: string; // 事件类型\n  id?: string; // 事件ID\n}\n\n// 发送心跳入参\nexport interface HeartbeatParam {\n  op: number;\n  d: number;\n}\n\n// 事件分发类型\nexport interface EventTypes {\n  eventType: string;\n  eventMsg?: object;\n}\n\n// 请求得到ws地址的参数\nexport interface GetWsParam {\n  appID: string;\n  token: string;\n  sandbox?: boolean;\n  shards?: Array<number>;\n  intents?: Array<AvailableIntentsEventsEnum>;\n  maxRetry?: number;\n}\n\n// 请求ws地址回包对象\nexport interface WsAddressObj {\n  url: string;\n  shards: number;\n  session_start_limit: {\n    total: number;\n    remaining: number;\n    reset_after: number;\n    max_concurrency: number;\n  };\n}\n\n// ws信息\nexport interface WsDataInfo {\n  data: WsAddressObj;\n}\n\n// 会话记录\nexport interface SessionRecord {\n  sessionID: string;\n  seq: number;\n}\n\n// 心跳参数\nexport enum OpCode {\n  DISPATCH = 0, // 服务端进行消息推送\n  HEARTBEAT = 1, // 客户端发送心跳\n  IDENTIFY = 2, // 鉴权\n  RESUME = 6, // 恢复连接\n  RECONNECT = 7, // 服务端通知客户端重连\n  INVALID_SESSION = 9, // 当identify或resume的时候，如果参数有错，服务端会返回该消息\n  HELLO = 10, // 当客户端与网关建立ws连接之后，网关下发的第一条消息\n  HEARTBEAT_ACK = 11, // 当发送心跳成功之后，就会收到该消息\n}\n\n// 可使用的intents事件类型\nexport enum AvailableIntentsEventsEnum {\n  GUILDS = 'GUILDS',\n  GUILD_MEMBERS = 'GUILD_MEMBERS',\n  GUILD_MESSAGES = 'GUILD_MESSAGES',\n  GUILD_MESSAGE_REACTIONS = 'GUILD_MESSAGE_REACTIONS',\n  DIRECT_MESSAGE = 'DIRECT_MESSAGE',\n  FORUMS_EVENT = 'FORUMS_EVENT',\n  AUDIO_ACTION = 'AUDIO_ACTION',\n  PUBLIC_GUILD_MESSAGES = 'PUBLIC_GUILD_MESSAGES',\n  MESSAGE_AUDIT = 'MESSAGE_AUDIT',\n  INTERACTION = 'INTERACTION',\n}\n\n// OpenAPI传过来的事件类型\nexport const WsEventType: { [key: string]: AvailableIntentsEventsEnum } = {\n  //  ======= GUILDS ======\n  GUILD_CREATE: AvailableIntentsEventsEnum.GUILDS, // 频道创建\n  GUILD_UPDATE: AvailableIntentsEventsEnum.GUILDS, // 频道更新\n  GUILD_DELETE: AvailableIntentsEventsEnum.GUILDS, // 频道删除\n  CHANNEL_CREATE: AvailableIntentsEventsEnum.GUILDS, // 子频道创建\n  CHANNEL_UPDATE: AvailableIntentsEventsEnum.GUILDS, // 子频道更新\n  CHANNEL_DELETE: AvailableIntentsEventsEnum.GUILDS, // 子频道删除\n\n  //  ======= GUILD_MEMBERS ======\n  GUILD_MEMBER_ADD: AvailableIntentsEventsEnum.GUILD_MEMBERS, // 频道成员加入\n  GUILD_MEMBER_UPDATE: AvailableIntentsEventsEnum.GUILD_MEMBERS, // 频道成员更新\n  GUILD_MEMBER_REMOVE: AvailableIntentsEventsEnum.GUILD_MEMBERS, // 频道成员移除\n\n  //  ======= GUILD_MESSAGES ======\n  MESSAGE_CREATE: AvailableIntentsEventsEnum.GUILD_MESSAGES, // 机器人收到频道消息时触发\n  MESSAGE_DELETE: AvailableIntentsEventsEnum.GUILD_MESSAGES, // 删除（撤回）消息事件\n\n  //  ======= GUILD_MESSAGE_REACTIONS ======\n  MESSAGE_REACTION_ADD: AvailableIntentsEventsEnum.GUILD_MESSAGE_REACTIONS, // 为消息添加表情表态\n  MESSAGE_REACTION_REMOVE: AvailableIntentsEventsEnum.GUILD_MESSAGE_REACTIONS, // 为消息删除表情表态\n\n  //  ======= DIRECT_MESSAGE ======\n  DIRECT_MESSAGE_CREATE: AvailableIntentsEventsEnum.DIRECT_MESSAGE, // 当收到用户发给机器人的私信消息时\n  DIRECT_MESSAGE_DELETE: AvailableIntentsEventsEnum.DIRECT_MESSAGE, // 删除（撤回）消息事件\n\n  //  ======= INTERACTION ======\n  INTERACTION_CREATE: AvailableIntentsEventsEnum.INTERACTION, // 互动事件创建时\n\n  //  ======= MESSAGE_AUDIT ======\n  MESSAGE_AUDIT_PASS: AvailableIntentsEventsEnum.MESSAGE_AUDIT, // 消息审核通过\n  MESSAGE_AUDIT_REJECT: AvailableIntentsEventsEnum.MESSAGE_AUDIT, // 消息审核不通过\n\n  //  ======= FORUMS_EVENT ======\n  FORUM_THREAD_CREATE: AvailableIntentsEventsEnum.FORUMS_EVENT, // 当用户创建帖子时\n  FORUM_THREAD_UPDATE: AvailableIntentsEventsEnum.FORUMS_EVENT, // 当用户更新帖子时\n  FORUM_THREAD_DELETE: AvailableIntentsEventsEnum.FORUMS_EVENT, // 当用户删除帖子题时\n  FORUM_POST_CREATE: AvailableIntentsEventsEnum.FORUMS_EVENT, // 当用户创建回帖时\n  FORUM_POST_DELETE: AvailableIntentsEventsEnum.FORUMS_EVENT, // 当用户删除回帖时\n  FORUM_REPLY_CREATE: AvailableIntentsEventsEnum.FORUMS_EVENT, // 当用户回复评论时\n  FORUM_REPLY_DELETE: AvailableIntentsEventsEnum.FORUMS_EVENT, // 当用户删除评论时\n  FORUM_PUBLISH_AUDIT_RESULT: AvailableIntentsEventsEnum.FORUMS_EVENT, // 当用户发表审核通过时\n\n  //  ======= AUDIO_ACTION ======\n  AUDIO_START: AvailableIntentsEventsEnum.AUDIO_ACTION, // 音频开始播放\n  AUDIO_FINISH: AvailableIntentsEventsEnum.AUDIO_ACTION, // 音频结束播放\n  AUDIO_ON_MIC: AvailableIntentsEventsEnum.AUDIO_ACTION, // 机器人上麦\n  AUDIO_OFF_MIC: AvailableIntentsEventsEnum.AUDIO_ACTION, // 机器人下麦\n\n  //  ======= PUBLIC_GUILD_MESSAGES ======\n  AT_MESSAGE_CREATE: AvailableIntentsEventsEnum.PUBLIC_GUILD_MESSAGES, // 机器人被@时触发\n  PUBLIC_MESSAGE_DELETE: AvailableIntentsEventsEnum.PUBLIC_GUILD_MESSAGES, // 当频道的消息被删除时\n};\n\nexport const WSCodes = {\n  1000: 'WS_CLOSE_REQUESTED',\n  4004: 'TOKEN_INVALID',\n  4010: 'SHARDING_INVALID',\n  4011: 'SHARDING_REQUIRED',\n  4013: 'INVALID_INTENTS',\n  4014: 'DISALLOWED_INTENTS',\n};\n\n// websocket错误码\nexport const enum WebsocketCode {\n  INVALID_OPCODE = 4001, // 无效的opcode\n  INVALID_PAYLOAD = 4002, // 无效的payload\n  ERROR_SEQ = 4007, // seq错误\n  TOO_FAST_PAYLOAD = 4008, // 发送 payload 过快，请重新连接，并遵守连接后返回的频控信息\n  EXPIRED = 4009, // 连接过期，请重连\n  INVALID_SHARD = 4010, // 无效的shard\n  TOO_MACH_GUILD = 4011, // 连接需要处理的guild过多，请进行合理分片\n  INVALID_VERSION = 4012, // 无效的version\n  INVALID_INTENTS = 4013, // 无效的intent\n  DISALLOWED_INTENTS = 4014, // intent无权限\n  ERROR = 4900, // 内部错误，请重连\n}\n\n// websocket错误原因\nexport const WebsocketCloseReason = [\n  {\n    code: 4001,\n    reason: '无效的opcode',\n  },\n  {\n    code: 4002,\n    reason: '无效的payload',\n  },\n  {\n    code: 4007,\n    reason: 'seq错误',\n  },\n  {\n    code: 4008,\n    reason: '发送 payload 过快，请重新连接，并遵守连接后返回的频控信息',\n    resume: true,\n  },\n  {\n    code: 4009,\n    reason: '连接过期，请重连',\n    resume: true,\n  },\n  {\n    code: 4010,\n    reason: '无效的shard',\n  },\n  {\n    code: 4011,\n    reason: '连接需要处理的guild过多，请进行合理分片',\n  },\n  {\n    code: 4012,\n    reason: '无效的version',\n  },\n  {\n    code: 4013,\n    reason: '无效的intent',\n  },\n  {\n    code: 4014,\n    reason: 'intent无权限',\n  },\n  {\n    code: 4900,\n    reason: '内部错误，请重连',\n  },\n  {\n    code: 4914,\n    reason: '机器人已下架,只允许连接沙箱环境,请断开连接,检验当前连接环境',\n  },\n  {\n    code: 4915,\n    reason: '机器人已封禁,不允许连接,请断开连接,申请解封后再连接',\n  },\n];\n\nexport type IntentEventsMapType = {\n  [key in AvailableIntentsEventsEnum]: number;\n};\n\n// 用户输入的intents类型\nexport const IntentEvents: IntentEventsMapType = {\n  GUILDS: 1 << 0,\n  GUILD_MEMBERS: 1 << 1,\n  GUILD_MESSAGES: 1 << 9,\n  GUILD_MESSAGE_REACTIONS: 1 << 10,\n  DIRECT_MESSAGE: 1 << 12,\n  INTERACTION: 1 << 26,\n  MESSAGE_AUDIT: 1 << 27,\n  FORUMS_EVENT: 1 << 28,\n  AUDIO_ACTION: 1 << 29,\n  PUBLIC_GUILD_MESSAGES: 1 << 30,\n};\n\n// intents\nexport const Intents = {\n  GUILDS: 0,\n  GUILD_MEMBERS: 1,\n  GUILD_BANS: 2,\n  GUILD_EMOJIS: 3,\n  GUILD_INTEGRATIONS: 4,\n  GUILD_WEBHOOKS: 5,\n  GUILD_INVITES: 6,\n  GUILD_VOICE_STATES: 7,\n  GUILD_PRESENCES: 8,\n  GUILD_MESSAGES: 9,\n  GUILD_MESSAGE_REACTIONS: 10,\n  GUILD_MESSAGE_TYPING: 11,\n  DIRECT_MESSAGES: 12,\n  DIRECT_MESSAGE_REACTIONS: 13,\n  DIRECT_MESSAGE_TYPING: 14,\n};\n\n// Session事件\nexport const SessionEvents = {\n  CLOSED: 'CLOSED',\n  READY: 'READY', // 已经可以通信\n  ERROR: 'ERROR', // 会话错误\n  INVALID_SESSION: 'INVALID_SESSION',\n  RECONNECT: 'RECONNECT', // 服务端通知重新连接\n  DISCONNECT: 'DISCONNECT', // 断线\n  EVENT_WS: 'EVENT_WS', // 内部通信\n  RESUMED: 'RESUMED', // 重连\n  DEAD: 'DEAD', // 连接已死亡，请检查网络或重启\n};\n\n// ws地址配置\nexport const WsObjRequestOptions = (sandbox: boolean) => ({\n  method: 'GET' as const,\n  url: buildUrl(getURL('wsInfo'), sandbox),\n  headers: {\n    Accept: '*/*',\n    'Accept-Encoding': 'utf-8',\n    'Accept-Language': 'zh-CN,zh;q=0.8',\n    Connection: 'keep-alive',\n    'User-Agent': apiVersion,\n    Authorization: '',\n  },\n});\n","// 配置文件\n// 后台校验暂时用不到这块，所以给一个默认值\nexport const Properties = {\n  os: 'linux',\n  browser: 'my_library',\n  device: 'my_library',\n};\n","import {\n  AvailableIntentsEventsEnum,\n  GetWsParam,\n  IntentEvents,\n  OpCode,\n  SessionEvents,\n  SessionRecord,\n  WebsocketCloseReason,\n  WsAddressObj,\n  WsEventType,\n  wsResData,\n} from '@src/types/websocket-types';\nimport WebSocket, { EventEmitter } from 'ws';\nimport { toObject } from '@src/utils/utils';\nimport { Properties } from '@src/utils/constants';\nimport { BotLogger } from '@src/utils/logger';\n\n// websocket连接\nexport class Ws {\n  ws!: WebSocket;\n  event!: EventEmitter;\n  config: GetWsParam;\n  heartbeatInterval!: number;\n  // 心跳参数，默认为心跳测试\n  heartbeatParam = {\n    op: OpCode.HEARTBEAT,\n    d: null, // 心跳唯一值\n  };\n  // 是否是断线重连，如果是断线重连的话，不需要走鉴权\n  isReconnect: boolean;\n  // 记录会话参数\n  sessionRecord = {\n    sessionID: '',\n    seq: 0,\n  };\n  alive = false;\n\n  constructor(config: GetWsParam, event: EventEmitter, sessionRecord?: SessionRecord) {\n    this.config = config;\n    this.isReconnect = false;\n    this.event = event;\n    // 如果是重连，则拿到重新的会话记录，然后进入重连步骤\n    if (sessionRecord) {\n      this.sessionRecord.sessionID = sessionRecord.sessionID;\n      this.sessionRecord.seq = sessionRecord.seq;\n      this.isReconnect = true;\n    }\n  }\n\n  // 创建一个websocket连接\n  createWebsocket(wsData: WsAddressObj) {\n    // 先链接到ws\n    this.connectWs(wsData);\n    // 对消息进行监听\n    return this.createListening();\n  }\n\n  // 创建监听\n  createListening() {\n    // websocket连接已开启\n    this.ws.on('open', () => {\n      BotLogger.info(`[CLIENT] 开启`);\n    });\n\n    // 接受消息\n    this.ws.on('message', (data: wsResData) => {\n      // BotLogger.info(`[CLIENT] 收到消息: ${data}`);\n\n      // 先将消息解析\n      const wsRes = toObject(data);\n      // 先判断websocket连接是否成功\n      if (wsRes?.op === OpCode.HELLO && wsRes?.d?.heartbeat_interval) {\n        // websocket连接成功，拿到心跳周期\n        this.heartbeatInterval = wsRes?.d?.heartbeat_interval;\n        // 非断线重连时，需要鉴权\n        this.isReconnect ? this.reconnectWs() : this.authWs();\n        return;\n      }\n\n      // 鉴权通过\n      if (wsRes.t === SessionEvents.READY) {\n        BotLogger.info(`[CLIENT] 鉴权通过`);\n        const { d, s } = wsRes;\n        const { session_id } = d;\n        // 获取当前会话参数\n        if (session_id && s) {\n          this.sessionRecord.sessionID = session_id;\n          this.sessionRecord.seq = s;\n          this.heartbeatParam.d = s;\n        }\n        this.event.emit(SessionEvents.READY, { eventType: SessionEvents.READY, msg: d || '' });\n        // 第一次发送心跳\n        BotLogger.info(`[CLIENT] 发送第一次心跳`, this.heartbeatParam);\n        this.sendWs(this.heartbeatParam);\n        return;\n      }\n\n      // 心跳测试\n      if (wsRes.op === OpCode.HEARTBEAT_ACK || wsRes.t === SessionEvents.RESUMED) {\n        if (!this.alive) {\n          this.alive = true;\n          this.event.emit(SessionEvents.EVENT_WS, { eventType: SessionEvents.READY });\n        }\n        BotLogger.info('[CLIENT] 心跳校验', this.heartbeatParam);\n        setTimeout(() => {\n          this.sendWs(this.heartbeatParam);\n        }, this.heartbeatInterval);\n      }\n\n      // 收到服务端锻炼重连的通知\n      if (wsRes.op === OpCode.RECONNECT) {\n        // 通知会话，当前已断线\n        this.event.emit(SessionEvents.EVENT_WS, { eventType: SessionEvents.RECONNECT });\n      }\n\n      // 服务端主动推送的消息\n      if (wsRes.op === OpCode.DISPATCH) {\n        // 更新心跳唯一值\n        const { s } = wsRes;\n        if (s) {\n          this.sessionRecord.seq = s;\n          this.heartbeatParam.d = s;\n        }\n        // OpenAPI事件分发\n        this.dispatchEvent(wsRes.t, wsRes);\n      }\n    });\n\n    // 监听websocket关闭事件\n    this.ws.on('close', (data: number) => {\n      BotLogger.info('[CLIENT] 连接关闭', data);\n      // 通知会话，当前已断线\n      this.alive = false;\n      this.event.emit(SessionEvents.EVENT_WS, {\n        eventType: SessionEvents.DISCONNECT,\n        eventMsg: this.sessionRecord,\n        code: data,\n      });\n      if (data) {\n        this.handleWsCloseEvent(data);\n      }\n    });\n\n    // 监听websocket错误\n    this.ws.on('error', () => {\n      BotLogger.info(`[CLIENT] 连接错误`);\n      this.event.emit(SessionEvents.CLOSED, { eventType: SessionEvents.CLOSED });\n    });\n\n    return this.ws;\n  }\n\n  // 连接ws\n  connectWs(wsData: WsAddressObj) {\n    // 创建websocket连接\n    this.ws = new WebSocket(wsData.url);\n  }\n\n  // 鉴权\n  authWs() {\n    // 鉴权参数\n    const authOp = {\n      op: OpCode.IDENTIFY, // 鉴权参数\n      d: {\n        token: `Bot ${this.config.appID}.${this.config.token}`, // 根据配置转换token\n        intents: this.getValidIntents(), // todo 接受的类型\n        shard: this.checkShards(this.config.shards) || [0, 1], // 分片信息,给一个默认值\n        properties: {\n          $os: Properties.os,\n          $browser: Properties.browser,\n          $device: Properties.device,\n        },\n      },\n    };\n    // 发送鉴权请求\n    this.sendWs(authOp);\n  }\n\n  // 校验intents类型\n  getValidIntents() {\n    // 判断用户有没有给到需要监听的事件类型\n    const intentsIn = this.getValidIntentsType();\n    if (intentsIn.length > 0) {\n      const intents = { value: 0 };\n      if (intentsIn.length === 1) {\n        intents.value = IntentEvents[intentsIn[0]];\n        return intents.value;\n      }\n      intentsIn.forEach((e) => {\n        intents.value = IntentEvents[e] | intents.value;\n      });\n      return intents.value;\n    }\n  }\n\n  // 校验intents格式\n  getValidIntentsType(): AvailableIntentsEventsEnum[] {\n    const intentsIn = this.config.intents;\n    // 全部可监听事件\n    const defaultIntents = Object.keys(AvailableIntentsEventsEnum) as AvailableIntentsEventsEnum[];\n    // 如果开发者没传intents，我们默认给他开启全部监听事件\n    if (!intentsIn) {\n      BotLogger.info('[CLIENT] intents不存在，默认开启全部监听事件');\n      return defaultIntents;\n    }\n    // 如果开发者传入intents为空数组，我们默认给他开启全部监听事件\n    if (intentsIn.length === 0) {\n      BotLogger.info('[CLIENT] intents为空，默认开启全部监听事件');\n      return defaultIntents;\n    }\n    // 如果intents大于可监听数\n    if (intentsIn.length > defaultIntents.length) {\n      BotLogger.info('[CLIENT] intents中的监听事件大于可监听数，仅开启有效监听事件');\n    }\n    // 如果intents中数据格式不对\n    const typeIn = intentsIn.every((item) => typeof item === 'string');\n    if (!typeIn) {\n      BotLogger.info('[CLIENT] intents中存在不合法类型，仅开启有效监听事件');\n      return intentsIn.filter((item) => typeof item === 'string');\n    }\n    return intentsIn;\n  }\n\n  // 校验shards\n  checkShards(shardsArr: Array<number> | undefined) {\n    // 没有传shards进来\n    if (!shardsArr) {\n      return BotLogger.info('shards 不存在');\n    }\n    // 传进来的符合要求\n    if (Array.isArray(shardsArr) && shardsArr.length === 2 && shardsArr[0] < shardsArr[1]) {\n      return shardsArr;\n    }\n    return BotLogger.info('shards 错误');\n  }\n\n  // 发送websocket\n  sendWs(msg: unknown) {\n    try {\n      // 先将消息转为字符串\n      this.ws.send(typeof msg === 'string' ? msg : JSON.stringify(msg));\n    } catch (e) {\n      BotLogger.info(e);\n    }\n  }\n\n  // 重新连接\n  reconnect() {\n    BotLogger.info('[CLIENT] 等待断线重连');\n  }\n\n  // 重新重连Ws\n  reconnectWs() {\n    const reconnectParam = {\n      op: OpCode.RESUME,\n      d: {\n        token: `Bot ${this.config.appID}.${this.config.token}`,\n        session_id: this.sessionRecord.sessionID,\n        seq: this.sessionRecord.seq,\n      },\n    };\n    this.sendWs(reconnectParam);\n  }\n\n  // OpenAPI事件分发\n  dispatchEvent(eventType: string, wsRes: wsResData) {\n    const msg = wsRes.d;\n    const eventId = wsRes.id || '';\n    // 如果没有事件，即刻退出\n    if (!msg || !eventType) return;\n    this.event.emit(WsEventType[eventType], { eventType, eventId, msg });\n  }\n\n  // 主动关闭会话\n  closeWs() {\n    this.ws.close();\n  }\n\n  // ws关闭的原因\n  handleWsCloseEvent(code: number) {\n    WebsocketCloseReason.forEach((e) => {\n      if (e.code === code) {\n        this.event.emit(SessionEvents.ERROR, { eventType: SessionEvents.ERROR, msg: e.reason });\n      }\n    });\n  }\n}\n","import { GetWsParam, SessionEvents, SessionRecord, WsObjRequestOptions } from '@src/types/websocket-types';\nimport { Ws } from '@src/client/websocket/websocket';\nimport { EventEmitter } from 'ws';\nimport resty from 'resty-client';\nimport { addAuthorization } from '@src/utils/utils';\nimport { BotLogger } from '@src/utils/logger';\n\nexport default class Session {\n  config: GetWsParam;\n  heartbeatInterval!: number;\n  ws!: Ws;\n  event!: EventEmitter;\n  sessionRecord: SessionRecord | undefined;\n\n  constructor(config: GetWsParam, event: EventEmitter, sessionRecord?: SessionRecord) {\n    this.config = config;\n    this.event = event;\n    // 如果会话记录存在的话，继续透传\n    if (sessionRecord) {\n      this.sessionRecord = sessionRecord;\n    }\n    this.createSession();\n  }\n\n  // 新建会话\n  createSession() {\n    this.ws = new Ws(this.config, this.event, this.sessionRecord || undefined);\n    // 拿到 ws地址等信息\n    const reqOptions = WsObjRequestOptions(this.config.sandbox as boolean);\n\n    addAuthorization(reqOptions.headers, this.config.appID, this.config.token);\n\n    resty\n      .create(reqOptions)\n      .get(reqOptions.url as string, {})\n      .then((r) => {\n        const wsData = r.data;\n        if (!wsData) throw new Error('获取ws连接信息异常');\n        this.ws.createWebsocket(wsData);\n      })\n      .catch((e) => {\n        BotLogger.info('[ERROR] createSession: ', e);\n        this.event.emit(SessionEvents.EVENT_WS, {\n          eventType: SessionEvents.DISCONNECT,\n          eventMsg: this.sessionRecord,\n        });\n      });\n  }\n\n  // 关闭会话\n  closeSession() {\n    this.ws.closeWs();\n  }\n}\n","import { GetWsParam, SessionEvents, SessionRecord, WebsocketCloseReason } from '@src/types/websocket-types';\nimport Session from '@src/client/session/session';\nimport { EventEmitter } from 'ws';\nimport { BotLogger } from '@src/utils/logger';\n\nconst MAX_RETRY = 10;\n\nexport default class WebsocketClient extends EventEmitter {\n  session!: Session;\n  retry = 0;\n\n  constructor(config: GetWsParam) {\n    super();\n    this.connect(config);\n\n    this.on(SessionEvents.EVENT_WS, (data) => {\n      switch (data.eventType) {\n        case SessionEvents.RECONNECT:\n          BotLogger.info('[CLIENT] 等待断线重连中...');\n          break;\n        case SessionEvents.DISCONNECT:\n          if (this.retry < (config.maxRetry || MAX_RETRY)) {\n            BotLogger.info('[CLIENT] 重新连接中，尝试次数：', this.retry + 1);\n            this.connect(config, WebsocketCloseReason.find((v) => v.code === data.code)?.resume ? data.eventMsg : null);\n            this.retry += 1;\n          } else {\n            BotLogger.info('[CLIENT] 超过重试次数，连接终止');\n            this.emit(SessionEvents.DEAD, { eventType: SessionEvents.ERROR, msg: '连接已死亡，请检查网络或重启' });\n          }\n          break;\n        case SessionEvents.READY:\n          BotLogger.info('[CLIENT] 连接成功');\n          this.retry = 0;\n          break;\n        default:\n      }\n    });\n  }\n\n  // 连接\n  connect(config: GetWsParam, sessionRecord?: SessionRecord) {\n    const event = this;\n    // 新建一个会话\n    this.session = new Session(config, event, sessionRecord);\n    return this.session;\n  }\n\n  // 断开连接\n  disconnect() {\n    // 关闭会话\n    this.session.closeSession();\n  }\n}\n","import { apiVersion, OpenAPI, v1Setup } from '@src/openapi/v1/openapi';\nimport { versionMapping } from '@src/openapi/openapi';\nimport { APIVersion, Config } from './types/openapi';\nimport { GetWsParam } from '@src/types';\nimport WebsocketClient from './client/client';\n\n// 注册v1接口\nv1Setup();\n\nlet defaultImpl = versionMapping[apiVersion] as typeof OpenAPI;\n\n// SelectOpenAPIVersion 指定使用哪个版本的 api 实现，如果不指定，sdk将默认使用第一个 setup 的 api 实现\nexport function selectOpenAPIVersion(version: APIVersion) {\n  if (!versionMapping[version]) {\n    return false;\n  }\n  defaultImpl = versionMapping[version];\n}\n// 如果需要使用其他版本的实现，需要在调用这个方法之前调用 SelectOpenAPIVersion 方法\nexport function createOpenAPI(config: Config) {\n  return defaultImpl.newClient(config);\n}\n// ws连接新建\nexport function createWebsocket(config: GetWsParam) {\n  return new WebsocketClient(config);\n}\n"],"names":["versionMapping","Object","create","register","version","api","apiMap","guildURI","guildMembersURI","guildMemberURI","channelsURI","channelURI","guildAnnouncesURI","guildAnnounceURI","channelAnnouncesURI","channelAnnounceURI","messagesURI","messageURI","userMeURI","userMeGuildsURI","muteURI","muteMemberURI","muteMembersURI","gatewayURI","gatewayBotURI","audioControlURI","rolesURI","roleURI","memberRoleURI","userMeDMURI","dmsURI","channelPermissionsURI","channelRolePermissionsURI","schedulesURI","scheduleURI","guildPermissionURI","guildPermissionDemandURI","wsInfo","reactionURI","pinsMessageIdURI","pinsMessageURI","interactionURI","guildVoiceMembersURI","botMic","getURL","endpoint","PinsMessage","request","config","channelID","options","method","url","rest","messageID","headers","Reaction","channelId","reactionToCreate","message_id","emojiType","emoji_type","emojiID","emoji_id","reactionToDelete","Promise","reject","Error","reqOptions","params","Guild","guildID","userID","pager","after","limit","this","log","setLevel","BotLogger","toObject","data","Buffer","isBuffer","JSON","parse","toString","getTimeStampNumber","Number","Date","getTime","substr","addUserAgent","header","sdkVersion","addAuthorization","appID","token","buildUrl","path","isSandbox","Channel","channel","position","Me","Message","type","id","message","hideTip","hidetip","Member","roleID","channelObj","defaultFilter","name","color","hoist","defaultColor","Role","role","filter","guild_id","info","DirectMessage","dm","msg","ChannelPermissions","p","parseInt","add","remove","error","Audio","audioControl","Mute","mute_end_timestamp","timeTo","mute_seconds","seconds","userIDList","user_ids","Announce","channel_id","recommendObj","Schedule","since","length","scheduleID","schedule","GuildPermissions","permissionDemandObj","Interaction","interactionID","interactionData","apiVersion","OpenAPI","client","guildApi","channelApi","meApi","messageApi","memberApi","roleApi","muteApi","announceApi","scheduleApi","directMessageApi","channelPermissionsApi","audioApi","guildPermissionsApi","reactionApi","interactionApi","pinsMessageApi","botUrl","sandbox","resty","useRes","result","traceid","response","v1Setup","setPrototypeOf","assertThisInitialized","OpCode","AvailableIntentsEventsEnum","WsEventType","GUILD_CREATE","GUILDS","GUILD_UPDATE","GUILD_DELETE","CHANNEL_CREATE","CHANNEL_UPDATE","CHANNEL_DELETE","GUILD_MEMBER_ADD","GUILD_MEMBERS","GUILD_MEMBER_UPDATE","GUILD_MEMBER_REMOVE","MESSAGE_CREATE","GUILD_MESSAGES","MESSAGE_DELETE","MESSAGE_REACTION_ADD","GUILD_MESSAGE_REACTIONS","MESSAGE_REACTION_REMOVE","DIRECT_MESSAGE_CREATE","DIRECT_MESSAGE","DIRECT_MESSAGE_DELETE","INTERACTION_CREATE","INTERACTION","MESSAGE_AUDIT_PASS","MESSAGE_AUDIT","MESSAGE_AUDIT_REJECT","FORUM_THREAD_CREATE","FORUMS_EVENT","FORUM_THREAD_UPDATE","FORUM_THREAD_DELETE","FORUM_POST_CREATE","FORUM_POST_DELETE","FORUM_REPLY_CREATE","FORUM_REPLY_DELETE","FORUM_PUBLISH_AUDIT_RESULT","AUDIO_START","AUDIO_ACTION","AUDIO_FINISH","AUDIO_ON_MIC","AUDIO_OFF_MIC","AT_MESSAGE_CREATE","PUBLIC_GUILD_MESSAGES","PUBLIC_MESSAGE_DELETE","WSCodes","WebsocketCode","WebsocketCloseReason","code","reason","resume","IntentEvents","Intents","GUILD_BANS","GUILD_EMOJIS","GUILD_INTEGRATIONS","GUILD_WEBHOOKS","GUILD_INVITES","GUILD_VOICE_STATES","GUILD_PRESENCES","GUILD_MESSAGE_TYPING","DIRECT_MESSAGES","DIRECT_MESSAGE_REACTIONS","DIRECT_MESSAGE_TYPING","SessionEvents","CLOSED","READY","ERROR","INVALID_SESSION","RECONNECT","DISCONNECT","EVENT_WS","RESUMED","DEAD","WsObjRequestOptions","Accept","Connection","Authorization","Properties","os","browser","device","Ws","event","sessionRecord","op","HEARTBEAT","d","sessionID","seq","isReconnect","wsData","connectWs","createListening","ws","on","wsRes","HELLO","heartbeat_interval","heartbeatInterval","reconnectWs","authWs","t","s","session_id","heartbeatParam","emit","eventType","sendWs","HEARTBEAT_ACK","alive","setTimeout","DISPATCH","dispatchEvent","eventMsg","handleWsCloseEvent","WebSocket","authOp","IDENTIFY","intents","getValidIntents","shard","checkShards","shards","properties","$os","$browser","$device","intentsIn","getValidIntentsType","value","forEach","e","defaultIntents","keys","typeIn","every","item","shardsArr","Array","isArray","send","stringify","reconnectParam","RESUME","eventId","close","Session","createSession","undefined","get","then","r","createWebsocket","closeWs","MAX_RETRY","WebsocketClient","connect","retry","maxRetry","find","v","session","closeSession","EventEmitter","defaultImpl","selectOpenAPIVersion","createOpenAPI","newClient"],"mappings":"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"}